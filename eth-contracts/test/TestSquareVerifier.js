// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let verifier = artifacts.require('Verifier.sol');
let correctProof = require('../../zokrates/code/square/proof');
// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
contract('TestSquareVerifier', accounts => {

    describe('Verify Proof', function(){
        beforeEach(async function(){
            this.contract = await verifier.new({from:accounts[0]});
        })
        it('Verification with correct proof', async function(){
            let verified = await this.contract.verifyTx.call(correctProof.proof.a,correctProof.proof.b,correctProof.proof.c,correctProof.inputs,{from:accounts[0]});
            assert.equal(verified,true,"Zokrates Verification with correct proof failed");
        });
        it('Verification with incorrect proof', async function(){
            correctProof.inputs=[2,7];
            let verified = await this.contract.verifyTx.call(correctProof.proof.a,correctProof.proof.b,correctProof.proof.c,correctProof.inputs,{from:accounts[0]});
            assert.equal(verified,false,"Zokrates Verification with incorrect proof failed");

        })
    })
})
    
// Test verification with incorrect proof
